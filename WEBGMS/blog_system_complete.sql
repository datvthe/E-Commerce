-- ================================================
-- üìù BLOG SYSTEM - COMPLETE DATABASE SCHEMA
-- ================================================
-- Purpose: H·ªá th·ªëng blog v·ªõi workflow ph√™ duy·ªát
-- Features:
--   - User/Seller t·∫°o blog (DRAFT/PENDING)
--   - Admin ph√™ duy·ªát/t·ª´ ch·ªëi (APPROVED/REJECTED)
--   - Hi·ªÉn th·ªã blog m·ªõi nh·∫•t tr√™n trang ch·ªß
--   - Comment & Like system
--   - Notification system
-- ================================================

USE gicungco;

-- ================================================
-- 1. B·∫¢NG BLOGS (Core blog data)
-- ================================================

CREATE TABLE IF NOT EXISTS blogs (
  blog_id BIGINT PRIMARY KEY AUTO_INCREMENT,
  user_id INT NOT NULL COMMENT 'T√°c gi·∫£ blog',
  
  -- Content fields
  title VARCHAR(255) NOT NULL COMMENT 'Ti√™u ƒë·ªÅ blog',
  slug VARCHAR(255) UNIQUE NOT NULL COMMENT 'URL-friendly slug',
  summary TEXT COMMENT 'T√≥m t·∫Øt ng·∫Øn (hi·ªÉn th·ªã tr√™n card)',
  content LONGTEXT NOT NULL COMMENT 'N·ªôi dung blog (HTML)',
  featured_image VARCHAR(500) COMMENT '·∫¢nh ƒë·∫°i di·ªán',
  
  -- Moderation fields
  status ENUM('DRAFT', 'PENDING', 'APPROVED', 'REJECTED') 
    DEFAULT 'DRAFT' COMMENT 'Tr·∫°ng th√°i blog',
  moderator_id INT COMMENT 'Admin ph√™ duy·ªát',
  moderation_note TEXT COMMENT 'L√Ω do t·ª´ ch·ªëi',
  moderated_at TIMESTAMP NULL COMMENT 'Th·ªùi gian ph√™ duy·ªát',
  
  -- SEO fields
  meta_title VARCHAR(255) COMMENT 'SEO title',
  meta_description TEXT COMMENT 'SEO description',
  meta_keywords VARCHAR(500) COMMENT 'SEO keywords',
  
  -- Statistics
  view_count INT DEFAULT 0 COMMENT 'S·ªë l∆∞·ª£t xem',
  like_count INT DEFAULT 0 COMMENT 'S·ªë l∆∞·ª£t th√≠ch',
  comment_count INT DEFAULT 0 COMMENT 'S·ªë b√¨nh lu·∫≠n',
  
  -- Timestamps
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  published_at TIMESTAMP NULL COMMENT 'Th·ªùi gian publish (khi approved)',
  
  -- Foreign Keys
  FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE,
  FOREIGN KEY (moderator_id) REFERENCES users(user_id) ON DELETE SET NULL,
  
  -- Indexes for performance
  INDEX idx_user (user_id),
  INDEX idx_status (status),
  INDEX idx_slug (slug),
  INDEX idx_created (created_at DESC),
  INDEX idx_published (published_at DESC),
  INDEX idx_status_published (status, published_at DESC)
  
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='B·∫£ng l∆∞u tr·ªØ blog posts';

-- ================================================
-- 2. B·∫¢NG BLOG_IMAGES (Blog image gallery)
-- ================================================

CREATE TABLE IF NOT EXISTS blog_images (
  image_id BIGINT PRIMARY KEY AUTO_INCREMENT,
  blog_id BIGINT NOT NULL,
  image_url VARCHAR(500) NOT NULL COMMENT 'URL ·∫£nh',
  caption TEXT COMMENT 'M√¥ t·∫£ ·∫£nh',
  display_order INT DEFAULT 0 COMMENT 'Th·ª© t·ª± hi·ªÉn th·ªã',
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  
  FOREIGN KEY (blog_id) REFERENCES blogs(blog_id) ON DELETE CASCADE,
  INDEX idx_blog (blog_id),
  INDEX idx_order (display_order)
  
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='·∫¢nh trong blog';

-- ================================================
-- 3. B·∫¢NG BLOG_COMMENTS (Comment system)
-- ================================================

CREATE TABLE IF NOT EXISTS blog_comments (
  comment_id BIGINT PRIMARY KEY AUTO_INCREMENT,
  blog_id BIGINT NOT NULL,
  user_id INT NOT NULL COMMENT 'Ng∆∞·ªùi comment',
  parent_comment_id BIGINT NULL COMMENT 'Reply to comment',
  content TEXT NOT NULL COMMENT 'N·ªôi dung comment',
  status ENUM('PENDING', 'APPROVED', 'SPAM') 
    DEFAULT 'APPROVED' COMMENT 'Tr·∫°ng th√°i comment',
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  
  FOREIGN KEY (blog_id) REFERENCES blogs(blog_id) ON DELETE CASCADE,
  FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE,
  FOREIGN KEY (parent_comment_id) REFERENCES blog_comments(comment_id) ON DELETE CASCADE,
  
  INDEX idx_blog (blog_id),
  INDEX idx_user (user_id),
  INDEX idx_parent (parent_comment_id),
  INDEX idx_status (status)
  
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='B√¨nh lu·∫≠n tr√™n blog';

-- ================================================
-- 4. B·∫¢NG BLOG_LIKES (Like system)
-- ================================================

CREATE TABLE IF NOT EXISTS blog_likes (
  like_id BIGINT PRIMARY KEY AUTO_INCREMENT,
  blog_id BIGINT NOT NULL,
  user_id INT NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  
  FOREIGN KEY (blog_id) REFERENCES blogs(blog_id) ON DELETE CASCADE,
  FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE,
  
  UNIQUE KEY unique_like (blog_id, user_id) COMMENT 'M·ªói user ch·ªâ like 1 l·∫ßn',
  INDEX idx_blog (blog_id),
  INDEX idx_user (user_id)
  
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='L∆∞·ª£t th√≠ch blog';

-- ================================================
-- 5. B·∫¢NG BLOG_NOTIFICATIONS (Notification system)
-- ================================================

CREATE TABLE IF NOT EXISTS blog_notifications (
  notification_id BIGINT PRIMARY KEY AUTO_INCREMENT,
  blog_id BIGINT NOT NULL,
  user_id INT NOT NULL COMMENT 'Ng∆∞·ªùi nh·∫≠n notification',
  type ENUM('APPROVED', 'REJECTED', 'COMMENT', 'LIKE') NOT NULL,
  title VARCHAR(255) NOT NULL COMMENT 'Ti√™u ƒë·ªÅ notification',
  message TEXT NOT NULL COMMENT 'N·ªôi dung notification',
  is_read BOOLEAN DEFAULT FALSE,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  
  FOREIGN KEY (blog_id) REFERENCES blogs(blog_id) ON DELETE CASCADE,
  FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE,
  
  INDEX idx_user_read (user_id, is_read),
  INDEX idx_created (created_at DESC),
  INDEX idx_type (type)
  
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Th√¥ng b√°o v·ªÅ blog';

-- ================================================
-- 6. INSERT SAMPLE DATA (Optional - for testing)
-- ================================================

-- Sample blog (APPROVED - for homepage display)
INSERT INTO blogs 
(user_id, title, slug, summary, content, featured_image, status, published_at, view_count, like_count, comment_count)
VALUES
(1, 
 'H∆∞·ªõng d·∫´n mua s·∫Øm online an to√†n', 
 'huong-dan-mua-sam-online-an-toan',
 'Nh·ªØng l∆∞u √Ω quan tr·ªçng khi mua s·∫Øm tr·ª±c tuy·∫øn ƒë·ªÉ b·∫£o v·ªá th√¥ng tin v√† t√†i kho·∫£n c·ªßa b·∫°n.',
 '<h2>1. Ch·ªçn website uy t√≠n</h2><p>Lu√¥n ki·ªÉm tra domain v√† certificate c·ªßa website...</p><h2>2. B·∫£o m·∫≠t th√¥ng tin</h2><p>Kh√¥ng chia s·∫ª m·∫≠t kh·∫©u ho·∫∑c m√£ OTP v·ªõi b·∫•t k·ª≥ ai...</p>',
 '/assets/img/blog/shopping-guide.jpg',
 'APPROVED',
 NOW(),
 1250,
 45,
 12
),
(2,
 'Top 5 s·∫£n ph·∫©m c√¥ng ngh·ªá hot nh·∫•t 2025',
 'top-5-san-pham-cong-nghe-hot-nhat-2025',
 'ƒêi·ªÉm qua 5 s·∫£n ph·∫©m c√¥ng ngh·ªá ƒë∆∞·ª£c sƒÉn ƒë√≥n nhi·ªÅu nh·∫•t trong nƒÉm 2025.',
 '<h2>1. Smartphone AI</h2><p>C√¥ng ngh·ªá AI t√≠ch h·ª£p s√¢u v√†o smartphone...</p><h2>2. VR Headset</h2><p>Th·ª±c t·∫ø ·∫£o ng√†y c√†ng ph·ªï bi·∫øn...</p>',
 '/assets/img/blog/tech-products.jpg',
 'APPROVED',
 DATE_SUB(NOW(), INTERVAL 1 DAY),
 890,
 67,
 23
),
(1,
 'C√°ch t·ªëi ∆∞u h√≥a tr·∫£i nghi·ªám game',
 'cach-toi-uu-hoa-trai-nghiem-game',
 'C√°c m·∫πo v√† th·ªß thu·∫≠t ƒë·ªÉ c·∫£i thi·ªán hi·ªáu su·∫•t ch∆°i game tr√™n PC v√† console.',
 '<h2>1. T·ªëi ∆∞u c·∫•u h√¨nh</h2><p>ƒêi·ªÅu ch·ªânh settings ph√π h·ª£p v·ªõi c·∫•u h√¨nh...</p><h2>2. Update driver</h2><p>Lu√¥n c·∫≠p nh·∫≠t driver card m√†n h√¨nh...</p>',
 '/assets/img/blog/gaming-tips.jpg',
 'APPROVED',
 DATE_SUB(NOW(), INTERVAL 2 DAY),
 560,
 34,
 8
);

-- Sample blog (PENDING - waiting for moderation)
INSERT INTO blogs 
(user_id, title, slug, summary, content, status)
VALUES
(17,
 'Review chi ti·∫øt game m·ªõi ra m·∫Øt',
 'review-chi-tiet-game-moi-ra-mat',
 'ƒê√°nh gi√° to√†n di·ªán v·ªÅ game XYZ v·ª´a ra m·∫Øt tu·∫ßn tr∆∞·ªõc.',
 '<h2>ƒê·ªì h·ªça</h2><p>ƒê·ªì h·ªça game r·∫•t ƒë·∫πp...</p><h2>Gameplay</h2><p>L·ªëi ch∆°i h·∫•p d·∫´n...</p>',
 'PENDING'
);

-- Sample comments
INSERT INTO blog_comments (blog_id, user_id, content, status)
VALUES
(1, 2, 'B√†i vi·∫øt r·∫•t h·ªØu √≠ch, c·∫£m ∆°n t√°c gi·∫£!', 'APPROVED'),
(1, 17, 'M√¨nh ƒë√£ √°p d·ª•ng v√† th·∫•y hi·ªáu qu·∫£.', 'APPROVED'),
(2, 1, 'B√†i vi·∫øt hay, ƒëang ƒë·ª£i mua s·∫£n ph·∫©m s·ªë 3.', 'APPROVED');

-- Sample likes
INSERT INTO blog_likes (blog_id, user_id)
VALUES
(1, 2),
(1, 17),
(2, 1),
(2, 17),
(3, 2);

-- ================================================
-- 7. VIEWS (Useful queries)
-- ================================================

-- View: Blog ƒëang ch·ªù ph√™ duy·ªát
CREATE OR REPLACE VIEW v_pending_blogs AS
SELECT 
    b.blog_id,
    b.title,
    b.slug,
    b.summary,
    b.created_at,
    u.user_id,
    u.full_name AS author_name,
    u.email AS author_email,
    u.role AS author_role
FROM blogs b
JOIN users u ON b.user_id = u.user_id
WHERE b.status = 'PENDING'
ORDER BY b.created_at ASC;

-- View: Blog ƒë√£ ƒë∆∞·ª£c ph√™ duy·ªát (public)
CREATE OR REPLACE VIEW v_approved_blogs AS
SELECT 
    b.blog_id,
    b.title,
    b.slug,
    b.summary,
    b.featured_image,
    b.view_count,
    b.like_count,
    b.comment_count,
    b.published_at,
    u.user_id,
    u.full_name AS author_name
FROM blogs b
JOIN users u ON b.user_id = u.user_id
WHERE b.status = 'APPROVED'
ORDER BY b.published_at DESC;

-- View: Blog statistics by user
CREATE OR REPLACE VIEW v_blog_stats_by_user AS
SELECT 
    u.user_id,
    u.full_name,
    u.email,
    COUNT(b.blog_id) AS total_blogs,
    SUM(CASE WHEN b.status = 'APPROVED' THEN 1 ELSE 0 END) AS approved_blogs,
    SUM(CASE WHEN b.status = 'PENDING' THEN 1 ELSE 0 END) AS pending_blogs,
    SUM(CASE WHEN b.status = 'REJECTED' THEN 1 ELSE 0 END) AS rejected_blogs,
    SUM(CASE WHEN b.status = 'DRAFT' THEN 1 ELSE 0 END) AS draft_blogs,
    SUM(b.view_count) AS total_views,
    SUM(b.like_count) AS total_likes,
    SUM(b.comment_count) AS total_comments
FROM users u
LEFT JOIN blogs b ON u.user_id = b.user_id
GROUP BY u.user_id, u.full_name, u.email;

-- ================================================
-- 8. TRIGGERS (Auto-update counters)
-- ================================================

-- Trigger: TƒÉng comment_count khi c√≥ comment m·ªõi
DELIMITER $$
CREATE TRIGGER after_comment_insert
AFTER INSERT ON blog_comments
FOR EACH ROW
BEGIN
    IF NEW.status = 'APPROVED' THEN
        UPDATE blogs 
        SET comment_count = comment_count + 1 
        WHERE blog_id = NEW.blog_id;
    END IF;
END$$
DELIMITER ;

-- Trigger: TƒÉng like_count khi c√≥ like m·ªõi
DELIMITER $$
CREATE TRIGGER after_like_insert
AFTER INSERT ON blog_likes
FOR EACH ROW
BEGIN
    UPDATE blogs 
    SET like_count = like_count + 1 
    WHERE blog_id = NEW.blog_id;
END$$
DELIMITER ;

-- Trigger: Gi·∫£m like_count khi unlike
DELIMITER $$
CREATE TRIGGER after_like_delete
AFTER DELETE ON blog_likes
FOR EACH ROW
BEGIN
    UPDATE blogs 
    SET like_count = like_count - 1 
    WHERE blog_id = OLD.blog_id;
END$$
DELIMITER ;

-- ================================================
-- 9. STORED PROCEDURES (Common operations)
-- ================================================

-- Procedure: Ph√™ duy·ªát blog
DELIMITER $$
CREATE PROCEDURE sp_approve_blog(
    IN p_blog_id BIGINT,
    IN p_moderator_id INT
)
BEGIN
    UPDATE blogs
    SET status = 'APPROVED',
        moderator_id = p_moderator_id,
        moderated_at = NOW(),
        published_at = NOW()
    WHERE blog_id = p_blog_id;
    
    -- T·∫°o notification cho t√°c gi·∫£
    INSERT INTO blog_notifications (blog_id, user_id, type, title, message)
    SELECT 
        blog_id,
        user_id,
        'APPROVED',
        'Blog c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c ph√™ duy·ªát! üéâ',
        CONCAT('Blog "', title, '" ƒë√£ ƒë∆∞·ª£c ph√™ duy·ªát v√† ƒëang hi·ªÉn th·ªã c√¥ng khai.')
    FROM blogs
    WHERE blog_id = p_blog_id;
END$$
DELIMITER ;

-- Procedure: T·ª´ ch·ªëi blog
DELIMITER $$
CREATE PROCEDURE sp_reject_blog(
    IN p_blog_id BIGINT,
    IN p_moderator_id INT,
    IN p_reason TEXT
)
BEGIN
    UPDATE blogs
    SET status = 'REJECTED',
        moderator_id = p_moderator_id,
        moderated_at = NOW(),
        moderation_note = p_reason
    WHERE blog_id = p_blog_id;
    
    -- T·∫°o notification cho t√°c gi·∫£
    INSERT INTO blog_notifications (blog_id, user_id, type, title, message)
    SELECT 
        blog_id,
        user_id,
        'REJECTED',
        'Blog c·ªßa b·∫°n b·ªã t·ª´ ch·ªëi ‚ùå',
        CONCAT('Blog "', title, '" ƒë√£ b·ªã t·ª´ ch·ªëi. L√Ω do: ', p_reason)
    FROM blogs
    WHERE blog_id = p_blog_id;
END$$
DELIMITER ;

-- ================================================
-- 10. VERIFY TABLES
-- ================================================

SELECT 
    TABLE_NAME,
    TABLE_ROWS,
    ROUND(((DATA_LENGTH + INDEX_LENGTH) / 1024 / 1024), 2) AS 'Size (MB)'
FROM information_schema.TABLES
WHERE TABLE_SCHEMA = 'gicungco'
  AND TABLE_NAME LIKE 'blog%'
ORDER BY TABLE_NAME;

-- ================================================
-- ‚úÖ BLOG SYSTEM DATABASE - COMPLETED!
-- ================================================
-- Ti·∫øp theo: T·∫°o Model classes v√† DAO classes
-- ================================================

